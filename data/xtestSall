#!/bin/bash

echo "============================================================================================================"
echo " Test1: Use the -1, -2 options to assign reads files."
echo "============================================================================================================"
rm -rf Stestout1
rm -rf reads_data
mkdir -p Stestout1
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -1 input/reads1_200.fq -2 input/reads2_200.fq -z 200 -r ./reads_data -x 15000 -o Stestout1 -A 0 -S 0 -s arabidopsis -n 10

echo "============================================================================================================"
echo " Test2: Use the library definition file (-l option) and the previously pre-processed reads data (-r option)."
echo "============================================================================================================"
rm -rf Stestout2
mkdir -p Stestout2
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout2 -A 0 -S 0 -s arabidopsis -n 10

echo "============================================================================================================"
echo " Test3: Use two libraries. Only the second library will be pre-processed."
echo "============================================================================================================"
rm -rf Stestout3
mkdir -p Stestout3
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp_1kb.conf                          -r ./reads_data -x 15000 -o Stestout3 -A 0 -S 0 -s arabidopsis -n  3

echo "============================================================================================================"
echo " Test4: Previous example, but using the MPI implementation."
echo "============================================================================================================"
rm -rf Stestout4
mkdir -p Stestout4
mpirun -n 4 ../bin/SRAssembler_MPI -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp_1kb.conf                          -r ./reads_data -x 15000 -o Stestout4 -A 0 -S 0 -s arabidopsis -n  3


echo "============================================================================================================"
echo " Test5.1: Stop after 4 rounds of assembly. Then continue the current assembly with a new SRAssembler run."
echo "============================================================================================================"
rm -rf Stestout5
mkdir -p Stestout5
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout5 -A 0 -S 0 -s arabidopsis -n  4
cp -r Stestout5 Stestout5.1

echo "============================================================================================================"
echo " Test5.2: Re-run the previous command, but set -n to 7. The assembly will start with round 5."
echo "============================================================================================================"
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout5 -A 0 -S 0 -s arabidopsis -n  7
cp -r Stestout5 Stestout5.2

echo "============================================================================================================"
echo " Test5.3: Re-run the previous command, but use -y to force SRAssembler to start from scratch."
echo "============================================================================================================"
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout5 -A 0 -S 0 -s arabidopsis -n  7 -y

echo "============================================================================================================"
echo " Test6: Looking for potentially better alignments ..."
echo "         Use higher score (-e 0.6) and coverage (-c 0.9) values to declare spliced alignment hits."
echo "         Only report contigs of at least 7000 nucleotides."
echo "============================================================================================================"
rm -rf Stestout6
mkdir -p Stestout6
mpirun -n 8 ../bin/SRAssembler_MPI -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp_1kb.conf                          -r ./reads_data -x 15000 -o Stestout6 -A 0 -S 0 -s arabidopsis      -n 20 -e 0.6 -c 0.9 -m 7000

echo "============================================================================================================"
echo " Test7: Use GeneSeqer as the spliced alignment program (-S 1)."
echo "============================================================================================================"
rm -rf Stestout7
mkdir -p Stestout7
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout7 -A 0 -S 1 -s arabidopsis -n 10

echo "============================================================================================================"
echo " Test8: Use Exonerate as the spliced alignment program (-S 2)."
echo "============================================================================================================"
rm -rf Stestout8
mkdir -p Stestout8
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout8 -A 0 -S 2 -s arabidopsis -n 10

echo "============================================================================================================"
echo " Test9: Run the Snap ab initio gene prediction program on the final contigs (-G 1)."
echo "============================================================================================================"
rm -rf Stestout9
mkdir -p Stestout9
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout9 -A 0 -G 1 -s arabidopsis -n 10


echo "============================================================================================================"
echo " Test10: Pre-process reads only (-P)."
echo "============================================================================================================"
rm -rf testout10
rm -rf reads_data
mkdir -p Stestout10
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout10 -P

echo "============================================================================================================"
echo " Test11: Remove unrelated contigs and reads every 2 rounds (-b 2)."
echo "============================================================================================================"
rm -rf Stestout11
mkdir -p Stestout11
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout11 -A 0 -S 0 -s arabidopsis -n 10 -b 2

echo "============================================================================================================"
echo " Test12: Assemble contigs only from round 3 onward (-a 3)."
echo "============================================================================================================"
rm -rf Stestout12
mkdir -p Stestout12
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout12 -A 0 -S 0 -s arabidopsis -n 10 -a 3

echo "============================================================================================================"
echo " Test13: Do not check if the query genes are assembled until the last round (-w)."
echo "============================================================================================================"
rm -rf Stestout13
mkdir -p Stestout13
../bin/SRAssembler                 -q input/LOC_Os06g04560.pep -t protein -p SRAssembler.conf -l libraries_200bp.conf                              -r ./reads_data -x 15000 -o Stestout13 -A 0 -S 0 -s arabidopsis -n 10 -w
